syntax = "proto3";

import "google/protobuf/timestamp.proto";
package dfs_service;

service DFSService {

    // Add your service calls here
    

    // 1. REQUIRED (Parts 1 & 2): A method to store files on the server
    rpc StoreFile(stream fileSegment) returns (fileResponse);

    // 2. REQUIRED (Parts 1 & 2): A method to fetch files from the server
    rpc FetchFile(file) returns (stream fileSegment);

    // 3. REQUIRED (Parts 1 & 2): A method to delete files from the server
    rpc DeleteFile(file) returns (fileResponse);

    // 4. REQUIRED (Parts 1 & 2): A method to list all files on the server
    rpc ListFiles(listFilesRequest) returns (files);

    // 5. REQUIRED (Parts 1 & 2): A method to get the status of a file on the server
    rpc FileStatus(file) returns (fileStatusResponse);

    // 7. Any other methods you deem necessary to complete the tasks of this assignment
    // https://grpc.io/docs/languages/cpp/quickstart/
    // rpc SayHello (HelloRequest) returns (HelloReply) {}

}

// Add your message types here


message file{
    string file_name = 1;
}

message fileSegment{
    bytes data = 1;
    string file_name = 2; // for Store function
}

message fileResponse{
    string file_name = 1;
    int64 modified = 2;
}

message listFilesRequest{
    // no args needed
}

message files{
    repeated fileResponse file = 1;
}

message fileStatusResponse{
    string file_name = 1;
    int64 file_size = 2;
    int64 created = 3;
    int64 modified = 4;

}


// The request message containing the user's name.
// message HelloRequest {
//     string name = 1;
//   }
  
//   // The response message containing the greetings
//   message HelloReply {
//     string message = 1;
//   }



